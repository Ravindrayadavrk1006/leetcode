/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
private:
    /*
        simple approach of where we know depth = 1  + max(root->left height, root->right height)
        
    */
    int maxDepth_helper(TreeNode* root){
        if(root == NULL)return 0;

        //find left depth
        int left_depth =  maxDepth_helper(root->left);
        //find right depth
        int right_depth = maxDepth_helper(root->right);
        return 1 + max(left_depth, right_depth);
    }
public:
    int maxDepth(TreeNode* root) {
        return maxDepth_helper(root);
    }
};
